name: Docker构建

on:
  workflow_call:
    inputs:
      # 需要检出的 Git 仓库地址
      source_repo:
        required: true
        type: string
      # 推送到 Docker Hub 的镜像名称
      docker_image_name:
        required: true
        type: string
      # Dockerfile 路径，默认为项目根目录
      dockerfile_path:
        required: false
        type: string
        default: "Dockerfile"
      # 构建上下文路径，默认为项目根目录
      context_path:
        required: false
        type: string
        default: "."
      # 是否使用自定义Dockerfile（位于当前仓库中）
      use_custom_dockerfile:
        required: false
        type: boolean
        default: false
      # 自定义Dockerfile路径（当use_custom_dockerfile为true时使用）
      custom_dockerfile_path:
        required: false
        type: string
        default: ""
    secrets:
      # 调用时需要传入的 secrets
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出目标仓库
        uses: actions/checkout@main
        with:
          repository: ${{ inputs.source_repo }}
          path: target-repo

      - name: 检出当前仓库（用于获取自定义Dockerfile）
        if: ${{ inputs.use_custom_dockerfile }}
        uses: actions/checkout@main
        with:
          path: current-repo

      - name: 复制自定义Dockerfile到目标仓库
        if: ${{ inputs.use_custom_dockerfile }}
        run: |
          mkdir -p target-repo/$(dirname ${{ inputs.custom_dockerfile_path }})
          cp current-repo/${{ inputs.custom_dockerfile_path }} target-repo/${{ inputs.custom_dockerfile_path }}

      - name: 登录 Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@master

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: 获取当前日期
        id: date
        run: echo "tag=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: 提取 Docker 元数据
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.docker_image_name }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.date.outputs.tag }}

      - name: 输出 Docker 标签
        run: |
          echo "docker 标签为:"
          echo "${{ steps.meta.outputs.tags }}"

      - name: 构建并且推送 Docker 镜像
        uses: docker/build-push-action@master
        with:
          context: ./target-repo
          file: ${{ inputs.use_custom_dockerfile && format('./target-repo/{0}', inputs.custom_dockerfile_path) || format('./target-repo/{0}', inputs.dockerfile_path) }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}