name: 主任务

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:

  # 构建li88iioo/Photonix项目（单个Dockerfile在根目录）
  build-photonix:
    uses: ./.github/workflows/docker-build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      source_repo: 'li88iioo/Photonix'
      docker_image_name: 'photonix'

  # 构建JefferyHcool/BiliNote后端（使用自定义Dockerfile解决路径问题）
  # build-bili-note-backend:
  #   uses: ./.github/workflows/docker-build.yml
  #   secrets:
  #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  #   with:
  #     source_repo: 'JefferyHcool/BiliNote'
  #     docker_image_name: 'bili-note-backend'
  #     use_custom_dockerfile: true
  #     custom_dockerfile_path: 'custom-dockerfiles/bili-note-backend/Dockerfile'
  #     context_path: '.'

  # 构建JefferyHcool/BiliNote前端（Dockerfile在BillNote_frontend目录）
  # build-bili-note-frontend:
  #   uses: ./.github/workflows/docker-build.yml
  #   secrets:
  #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  #   with:
  #     source_repo: 'JefferyHcool/BiliNote'
  #     docker_image_name: 'bili-note-frontend'
  #     dockerfile_path: 'BillNote_frontend/Dockerfile'
  #     context_path: '.'

  # 使用docker-compose构建BiliNote项目（推荐方式）
  build-bili-note-with-compose:
    uses: ./.github/workflows/docker-build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      source_repo: 'JefferyHcool/BiliNote'
      docker_image_name: 'bili-note'
      use_compose_build: true
      compose_file_path: 'docker-compose.yml'
      
 # 清除旧的workflow运行记录
  cleanup-workflow-runs:
    runs-on: ubuntu-latest
    steps:
      - name: 删除旧 Actions
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.CLEANUP_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2